[tox]
isolated_build = True
envlist = py310, py311, py312, lint, docs, report # TODO The py3xx should coincide with the versions supported by the package

[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312, check, lint, docs, report # TODO This should be the highest Python version supported by the package

[testenv]
# https://hynek.me/articles/turbo-charge-tox/ explains the inclusion of the next 2 lines
package = wheel
wheel_build_env = .pkg
setenv = PYTHONPATH = {toxinidir}
deps = tox-uv
skip_install = true
allowlist_externals = uv
commands_pre = uv sync # -v
commands =
    {% if cookiecutter.use_pytest == 'y' -%}
    uv run pytest --basetemp={envtmpdir} --cov --cov-append
    {% else -%}
    uv run coverage run -m unittest discover
    {%- endif %}
[testenv:py312] # TODO This should be the highest Python version supported by the package
depends = clean

[testenv:check]
commands =
    uv run pre-commit run --all-files --show-diff-on-failure

[testenv:docs]
commands =
    uv run mkdocs build

[testenv:lint]
description = Run all linting/formatting check
basepython = python
commands =
    uv run ruff check src/{{ cookiecutter.project_slug }} tests
    {%- if cookiecutter.formatter|lower == 'black' %}
    uv run black --check src/{{ cookiecutter.project_slug }} tests
    {%- elif cookiecutter.formatter|lower == 'ruff-format' %}
    uv run ruff format --check src/{{ cookiecutter.project_slug }} tests
    {%- endif %}
    uv run mypy --junit-xml reports/mypy.xml .

[testenv:report]
commands =
    uv run coverage report
    uv run coverage html

[testenv:clean]
commands =
   uv run coverage erase
